---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alameda-datahub
  namespace: "my-alameda"
  annotations:
    description: Defines how to deploy the application alameda-datahub
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alameda-datahub
  template:
    metadata:
      name: alameda-datahub
      labels:
        app: alameda-datahub
    spec:
      containers:
      - name: alameda-datahub
        image: quay.io/prophetstor/alameda-datahub-rhel:v0.3.6
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 150Mi
          requests:
            cpu: 50m
            memory: 100Mi
        env:
        - name: ALAMEDA_DATAHUB_INFLUXDB_ADDRESS
          value: https://alameda-influxdb.my-alameda.svc:8086
        - name: ALAMEDA_DATAHUB_INFLUXDB_USERNAME
          value: admin
        - name: ALAMEDA_DATAHUB_INFLUXDB_PASSWORD
          value: adminpass
        - name: ALAMEDA_DATAHUB_PROMETHEUS_URL
          value: https://prometheus-k8s.openshift-monitoring.svc:9091
      serviceAccount: alameda-datahub
      serviceAccountName: alameda-datahub
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alameda-operator
  namespace: "my-alameda"
  annotations:
    description: Defines how to deploy the application alameda-operator
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alameda-operator
  template:
    metadata:
      name: alameda-operator
      labels:
        app: alameda-operator
    spec:
      containers:
      - name: alameda-operator
        image: quay.io/prophetstor/alameda-operator-rhel:v0.3.6
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 20m
            memory: 40Mi
          requests:
            cpu: 10m
            memory: 20Mi
        env:
        - name: ALAMEDA_OPERATOR_DATAHUB_ADDRESS
          value: "alameda-datahub.my-alameda.svc:50050"
      serviceAccount: alameda-operator
      serviceAccountName: alameda-operator           
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alameda-evictioner
  namespace: "my-alameda"
  annotations:
    description: Defines how to deploy the alameda-evictioner
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alameda-evictioner
  template:
    metadata:
      name: alameda-evictioner
      labels:
        app: alameda-evictioner
    spec:
      containers:
      - name: alameda-evictioner
        image: quay.io/prophetstor/alameda-evictioner-rhel:v0.3.6
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 60m
            memory: 90Mi
          requests:
            cpu: 45m
            memory: 75Mi
        env:
        - name: ALAMEDA_EVICTIONER_DATAHUB_ADDRESS
          value: "alameda-datahub.my-alameda.svc:50050"
        - name: ALAMEDA_EVICTIONER_EVICTION_ENABLE
          value: "false"
      serviceAccount: alameda-evictioner
      serviceAccountName: alameda-evictioner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admission-controller
  namespace: "my-alameda"
  annotations:
    description: Defines how to deploy the admission-controller
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admission-controller
  template:
    metadata:
      name: admission-controller
      labels:
        app: admission-controller
    spec:
      containers:
      - name: admission-controller
        image: quay.io/prophetstor/alameda-admission-rhel:v0.3.6
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 60m
            memory: 90Mi
          requests:
            cpu: 45m
            memory: 75Mi
        env:
        - name: ALAMEDA_ADMCTL_DEPLOYED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ALAMEDA_ADMCTL_DATAHUB_ADDRESS
          value: "alameda-datahub.my-alameda.svc:50050"
        - name: ALAMEDA_ADMCTL_ENABLE
          value: 'false'
        - name: ALAMEDA_ADMCTL_TLS_CERT_FILE
          value: /etc/tls-certs/tls.crt
        - name: ALAMEDA_ADMCTL_TLS_PRIVATE_KEY_FILE
          value: /etc/tls-certs/tls.key
        - name: ALAMEDA_ADMCTL_CA_CERT_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        volumeMounts:
        - mountPath: /etc/tls-certs
          name: tls-certs
          readOnly: false
      volumes:
      - name: tls-certs
        secret:
          secretName: admission-controller-tls
      serviceAccount: admission-controller
      serviceAccountName: admission-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alameda-influxdb
  namespace: "my-alameda"
  annotations:
    description: Defines how to deploy the application influxdb
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
        app: alameda-influxdb
  template:
    metadata:
      labels:
        app: alameda-influxdb
    spec:
      # securityContext:
      #   runAsUser: 1000
      containers:
      - name: influxdb
        image: influxdb:1.7-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: INFLUXDB_REPORTING_DISABLED
          value: "true"
        - name: INFLUXDB_HTTP_HTTPS_ENABLED
          value: "true"
        - name: INFLUXDB_HTTP_HTTPS_CERTIFICATE
          value: "/etc/tls/private/tls.crt"
        - name: INFLUXDB_HTTP_HTTPS_PRIVATE_KEY
          value: "/etc/tls/private/tls.key"
        - name: INFLUXDB_HTTP_AUTH_ENABLED
          value: "true"
        - name: INFLUXDB_ADMIN_USER
          value: "admin"
        - name: INFLUXDB_ADMIN_PASSWORD
          value: "adminpass"
        - name: INFLUXDB_USER
          value: "user"
        - name: INFLUXDB_USER_PASSWORD
          value: "userpass"
        volumeMounts:
        - mountPath: /etc/tls/private
          name: alameda-datahub-tls
          readOnly: false
        - mountPath: /var/lib/influxdb
          name: influxdb-storage
          subPath: influxdb
      volumes:
      - name: influxdb-storage
        persistentVolumeClaim:
          claimName: 'my-alameda.influxdb.pvc'
      - name: alameda-datahub-tls
        secret:
          secretName: alameda-datahub-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alameda-grafana
  namespace: "my-alameda"
  annotations:
    description: Defines how to deploy the application grafana
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
        app: alameda-grafana
  template:
    metadata:
      labels:
        app: alameda-grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:5.4.3
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 3000
            name: http
            protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
            subPath: grafana
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: 'my-alameda.grafana.pvc'
        - configMap:
            defaultMode: 420
            name: grafana-datasources
          name: grafana-datasources 