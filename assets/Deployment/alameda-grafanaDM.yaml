apiVersion: apps/v1
kind: Deployment
metadata:
  name: alameda-grafana
  namespace: {{.NameSpace}}
  labels:
    app: alameda
    component: alameda-grafana
  annotations:
    description: Defines how to deploy the application grafana
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
        component: alameda-grafana
  template:
    metadata:
      labels:
        app: alameda
        component: alameda-grafana
    spec:
      initContainers:
      - name: gettoken
        image: "alpine"
        command: ["sh","/shell/gettoken.sh"]
        volumeMounts:
        - mountPath: /shell
          name: get-token-shell
        - mountPath: /datasources
          name: datasources
        - mountPath: /etc/grafana/provisioning/datasources
          name: prometheus-datasource
      containers:
      - name: grafana
        image: quay.io/prophetstor/alameda-grafana:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 3000
            name: http
            protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - mountPath: /etc/grafana/provisioning/datasources
            name: prometheus-datasource
      volumes:
        - name: prometheus-datasource
          emptyDir: {}
        - name: grafana-data-storage
        - name: grafana-log-storage
        - configMap:
            items:
            - key: gettoken.sh
              path: gettoken.sh
            name: grafana-datasources
          name: get-token-shell
        - configMap:
            defaultMode: 420
            items:
            - key: prometheus.yaml
              path: prometheus.yaml
            name: grafana-datasources
          name: datasources
      serviceAccount: alameda-grafana
      serviceAccountName: alameda-grafana
